---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

const calendarIcon = "calendar";
const hourglassICon = "hourglass";

const posts = (await getCollection("blog")).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
).reverse();

const toElipsis = (text: string) => {
	if (text.length > 600) {
		return `${text.slice(0, 600)}...`;
	} else {
		return text;
	}
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<section
				id="articles"
				class="'container flex mx-auto items-center justify-center gap-10 px-4 lg:px-0 py-10"
			>
				<ul class="flex flex-col justify-center gap-5 lg:w-[65vw] ">
					{
						posts.map((post, index) => {
							if (index == 0) {
								console.log(post);
							}

							return (
								<li>
									<a
										href={"articles/" + post.slug}
										class="flex flex-col gap-5"
									>
										<p class="text-2xl font-semibold">
											{post.data.title}
										</p>
										<Image
											src={
												post.data.heroImage == ""
													? "https://placehold.co/600x400"
													: post.data.heroImage!
											}
											height={1}
											width={1}
											loading="lazy"
											class="h-auto w-full rounded-md"
											alt={post.data.title}
										/>
										<div class="flex flex-wrap gap-2">
											{(post.data.tags ?? []).map((tag: string) => (
												<div class="text-sm font-extralight text-gray-300 ">
													<p class="text-md">#{tag}</p>
												</div>
											))}
										</div>
										<p>
											{toElipsis(post.data.short)}
											<span class="underline">
												Read more
											</span>
										</p>
										<ul class="flex flex-row gap-4">
											<li class="flex flex-row items-center gap-2 text-sm font-extralight">
												<Icon
													name={calendarIcon}
													class="h-3 w-3 text-white"
												/>
												<FormattedDate
													date={post.data.pubDate}
												/>
												{post.data.updatedDate && (
													<div>
														Last updated on{" "}
														<FormattedDate
															date={
																post.data
																	.updatedDate
															}
														/>
													</div>
												)}
											</li>
											<li class="flex flex-row items-center gap-2 text-sm font-extralight">
												<Icon
													name={hourglassICon}
													class="h-3 w-3 text-white"
												/>
												? Minutes time read
											</li>
										</ul>
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
